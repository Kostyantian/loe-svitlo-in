'use client';

import { useEffect, useState, useRef } from 'react';

interface MenuItem {
  '@id': string;
  '@type': string;
  id: number;
  name: string;
  slug?: string;
  orders: number;
  children: MenuItem[];
  menu?: string;
  imageUrl?: string;
  description?: string;
  rawHtml?: string;
  rawMobileHtml?: string;
  parent?: string;
}

interface MenuResponse {
  '@context': string;
  '@id': string;
  '@type': string;
  'hydra:member': Array<{
    '@id': string;
    '@type': string;
    id: number;
    name: string;
    type: string;
    menuItems: MenuItem[];
  }>;
}

interface MenuData {
  desktopImageUrl: string;
  mobileImageUrl: string;
  desktopHtml: string;
  mobileHtml: string;
  archiveLength: number;
}

export default function Home() {
  const [menuData, setMenuData] = useState<MenuData | null>(null);
  const [loading, setLoading] = useState<boolean>(true);
  const [error, setError] = useState<string | null>(null);
  const [isMobile, setIsMobile] = useState<boolean>(false);
  const [notificationPermission, setNotificationPermission] = useState<NotificationPermission>('default');
  const audioRef = useRef<HTMLAudioElement | null>(null);
  const previousArchiveLengthRef = useRef<number | null>(null);

  useEffect(() => {
    // –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑–≤—É–∫–æ–≤–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç—É
    audioRef.current = new Audio('data:audio/wav;base64,UklGRnoGAABXQVZFZm10IBAAAAABAAEAQB8AAEAfAAABAAgAZGF0YQoGAACBhYqFbF1fdJivrJBhNjVgodDbq2EcBj+a2/LDciUFLIHO8tiJNwgZaLvt559NEAxQp+PwtmMcBjiR1/LMeSwFJHfH8N2QQAoUXrTp66hVFApGn+DyvmwhBjiH0fPTgjMGHm7A7+OZURE');
    console.log('üîä Audio –µ–ª–µ–º–µ–Ω—Ç —Å—Ç–≤–æ—Ä–µ–Ω–æ');

    // –ó–∞–ø–∏—Ç –Ω–∞ –¥–æ–∑–≤—ñ–ª –¥–ª—è —Å–ø–æ–≤—ñ—â–µ–Ω—å
    if ('Notification' in window) {
      const currentPermission = Notification.permission;
      console.log('üîî –ü–æ—Ç–æ—á–Ω–∏–π –¥–æ–∑–≤—ñ–ª –Ω–∞ notifications:', currentPermission);
      setNotificationPermission(currentPermission);
    }

    // –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è Service Worker –¥–ª—è PWA
    if ('serviceWorker' in navigator) {
      navigator.serviceWorker
        .register('/sw.js')
        .then((registration) => {
          console.log('‚úÖ Service Worker registered:', registration);
          // –ß–µ–∫–∞—î–º–æ –ø–æ–∫–∏ Service Worker —Å—Ç–∞–Ω–µ –∞–∫—Ç–∏–≤–Ω–∏–º
          return navigator.serviceWorker.ready;
        })
        .then(() => {
          console.log('‚úÖ Service Worker ready and active');
        })
        .catch((err) => console.error('‚ùå Service Worker registration failed:', err));
    }

    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ —Ü–µ –º–æ–±—ñ–ª—å–Ω–∏–π –ø—Ä–∏—Å—Ç—Ä—ñ–π
    const checkMobile = () => {
      setIsMobile(window.innerWidth < 768);
    };

    checkMobile();
    window.addEventListener('resize', checkMobile);

    return () => window.removeEventListener('resize', checkMobile);
  }, []);

  const playNotificationSound = () => {
    console.log('üîä –°–ø—Ä–æ–±–∞ –≤—ñ–¥—Ç–≤–æ—Ä–∏—Ç–∏ –∑–≤—É–∫...');
    if (audioRef.current) {
      audioRef.current.play()
        .then(() => console.log('‚úÖ –ó–≤—É–∫ –≤—ñ–¥—Ç–≤–æ—Ä–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ'))
        .catch(err => console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑–≤—É–∫—É:', err));
    } else {
      console.error('‚ùå Audio –µ–ª–µ–º–µ–Ω—Ç –Ω–µ —Å—Ç–≤–æ—Ä–µ–Ω–∏–π');
    }
  };

  const showNotification = async (title: string, body: string) => {
    console.log('üîî –°–ø—Ä–æ–±–∞ –ø–æ–∫–∞–∑–∞—Ç–∏ notification...');
    console.log('üîî –î–æ–∑–≤—ñ–ª –Ω–∞ notifications:', notificationPermission);

    if (notificationPermission === 'granted') {
      try {
        // –°–ø—Ä–æ–±—É–≤–∞—Ç–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏ Service Worker (–∫—Ä–∞—â–µ –¥–ª—è Android)
        if ('serviceWorker' in navigator) {
          // –ß–µ–∫–∞—î–º–æ –ø–æ–∫–∏ Service Worker —Å—Ç–∞–Ω–µ –≥–æ—Ç–æ–≤–∏–º
          const registration = await navigator.serviceWorker.ready;
          console.log('üì± –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é Service Worker –¥–ª—è notification (Android-friendly)');

          await registration.showNotification(title, {
            body,
            icon: '/icon-192.png',
            badge: '/icon-192.png',
            tag: 'schedule-update',
            requireInteraction: false,
          } as NotificationOptions);
          console.log('‚úÖ Notification –ø–æ–∫–∞–∑–∞–Ω–æ —á–µ—Ä–µ–∑ Service Worker');
        } else {
          // Fallback –Ω–∞ –∑–≤–∏—á–∞–π–Ω–∏–π Notification API (–¥–ª—è iOS/Desktop)
          console.log('üíª –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é –∑–≤–∏—á–∞–π–Ω–∏–π Notification API');
          const notification = new Notification(title, {
            body,
            icon: '/icon-192.png',
            badge: '/icon-192.png',
            tag: 'schedule-update',
          });
          console.log('‚úÖ Notification —Å—Ç–≤–æ—Ä–µ–Ω–æ:', notification);
        }
      } catch (err) {
        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è notification:', err);
        // Fallback —è–∫—â–æ Service Worker –Ω–µ —Å–ø—Ä–∞—Ü—é–≤–∞–≤
        try {
          const notification = new Notification(title, {
            body,
            icon: '/icon-192.png',
            badge: '/icon-192.png',
            tag: 'schedule-update',
          });
          console.log('‚úÖ Notification —Å—Ç–≤–æ—Ä–µ–Ω–æ —á–µ—Ä–µ–∑ fallback:', notification);
        } catch (fallbackErr) {
          console.error('‚ùå Fallback —Ç–∞–∫–æ–∂ –Ω–µ —Å–ø—Ä–∞—Ü—é–≤–∞–≤:', fallbackErr);
        }
      }
    } else {
      console.warn('‚ö†Ô∏è Notification –Ω–µ –ø–æ–∫–∞–∑–∞–Ω–æ - –¥–æ–∑–≤—ñ–ª:', notificationPermission);
    }
  };

  const fetchLatestImage = async () => {
    try {
      setError(null);
      console.log('üîÑ –ü–æ—á–∏–Ω–∞—é fetch –¥–∞–Ω–∏—Ö...');

      // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–æ–∑–≤–æ–ª—É –Ω–∞ notifications
      if ('Notification' in window) {
        const currentPermission = Notification.permission;
        if (currentPermission !== notificationPermission) {
          console.log('üîî –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞—Ç—É—Å—É –¥–æ–∑–≤–æ–ª—É:', currentPermission);
          setNotificationPermission(currentPermission);
        }
      }

      const response = await fetch('/api/menus');

      if (!response.ok) {
        throw new Error('Failed to fetch data');
      }

      const data: MenuResponse = await response.json();
      console.log('‚úÖ –î–∞–Ω—ñ –æ—Ç—Ä–∏–º–∞–Ω–æ');

      if (data['hydra:member'] && data['hydra:member'].length > 0) {
        const menu = data['hydra:member'][0];

        if (menu.menuItems && menu.menuItems.length > 0) {
          // –ó–Ω–∞–π—Ç–∏ –µ–ª–µ–º–µ–Ω—Ç "Arhiv" –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –∑–º—ñ–Ω
          const archiveItem = menu.menuItems.find(item => item.name === 'Arhiv');
          const archiveLength = archiveItem ? archiveItem.children.length : 0;

          console.log('üìä –ü–æ—Ç–æ—á–Ω–∞ –¥–æ–≤–∂–∏–Ω–∞ –∞—Ä—Ö—ñ–≤—É:', archiveLength);
          console.log('üìä –ü–æ–ø–µ—Ä–µ–¥–Ω—è –¥–æ–≤–∂–∏–Ω–∞ –∞—Ä—Ö—ñ–≤—É:', previousArchiveLengthRef.current);

          // –í–∑—è—Ç–∏ –ø–µ—Ä—à–∏–π –µ–ª–µ–º–µ–Ω—Ç (Today)
          const todayItem = menu.menuItems[0];

          console.log('üìã Today item:', {
            name: todayItem.name,
            hasImageUrl: !!todayItem.imageUrl,
            hasSlug: !!todayItem.slug,
            hasDescription: !!todayItem.description,
            imageUrl: todayItem.imageUrl,
            slug: todayItem.slug,
            description: todayItem.description?.substring(0, 100)
          });

          // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ —î –≥—Ä–∞—Ñ—ñ–∫ –∞–±–æ —î –æ–ø–∏—Å –ø—Ä–æ –≤—ñ–¥–º—ñ–Ω—É
          const hasSchedule = todayItem.imageUrl && todayItem.slug;
          const hasDescription = todayItem.description && todayItem.description.trim().length > 0;

          console.log('‚úÖ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∏:', { hasSchedule, hasDescription });

          if (hasSchedule || hasDescription) {
            const newMenuData: MenuData = {
              desktopImageUrl: todayItem.imageUrl || '',
              mobileImageUrl: todayItem.slug || '',
              desktopHtml: todayItem.rawHtml || todayItem.description || '',
              mobileHtml: todayItem.rawMobileHtml || todayItem.description || '',
              archiveLength,
            };

            console.log('üíæ –í—Å—Ç–∞–Ω–æ–≤–ª—é—é menuData –∑ –≥—Ä–∞—Ñ—ñ–∫–æ–º:', newMenuData);

            // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ –∑–º—ñ–Ω–∏–ª–∞—Å—è –¥–æ–≤–∂–∏–Ω–∞ –∞—Ä—Ö—ñ–≤—É
            if (previousArchiveLengthRef.current !== null &&
                previousArchiveLengthRef.current !== archiveLength) {
              // –ì—Ä–∞—Ñ—ñ–∫ –∑–º—ñ–Ω–∏–≤—Å—è!
              console.log('üîî –ì–†–ê–§–Ü–ö –ó–ú–Ü–ù–ò–í–°–Ø! –ü–æ–∫–∞–∑—É—é —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è');
              playNotificationSound();
              showNotification(
                '–ì—Ä–∞—Ñ—ñ–∫ –≤—ñ–¥–∫–ª—é—á–µ–Ω—å –æ–Ω–æ–≤–ª–µ–Ω–æ!',
                '–ó\'—è–≤–∏–≤—Å—è –Ω–æ–≤–∏–π –≥—Ä–∞—Ñ—ñ–∫ –ø–æ–≥–æ–¥–∏–Ω–Ω–∏—Ö –≤—ñ–¥–∫–ª—é—á–µ–Ω—å –µ–ª–µ–∫—Ç—Ä–æ–µ–Ω–µ—Ä–≥—ñ—ó.'
              );
            } else if (previousArchiveLengthRef.current === null) {
              console.log('‚ÑπÔ∏è –ü–µ—Ä—à–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è - —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –Ω–µ –ø–æ–∫–∞–∑—É—î—Ç—å—Å—è');
            } else {
              console.log('‚úÖ –î–æ–≤–∂–∏–Ω–∞ –∞—Ä—Ö—ñ–≤—É –Ω–µ –∑–º—ñ–Ω–∏–ª–∞—Å—è - —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –Ω–µ –ø–æ—Ç—Ä—ñ–±–Ω–µ');
            }

            // –û–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ–≥–æ –∑–Ω–∞—á–µ–Ω–Ω—è
            previousArchiveLengthRef.current = archiveLength;
            setMenuData(newMenuData);
          } else {
            // –ù–µ–º–∞—î –Ω—ñ –≥—Ä–∞—Ñ—ñ–∫–∞ –Ω—ñ –æ–ø–∏—Å—É - –ø–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
            const emptyMenuData: MenuData = {
              desktopImageUrl: '',
              mobileImageUrl: '',
              desktopHtml: '<p><b>–°—å–æ–≥–æ–¥–Ω—ñ –≥—Ä–∞—Ñ—ñ–∫–∏ –≤—ñ–¥–∫–ª—é—á–µ–Ω—å –Ω–µ –∑–∞—Å—Ç–æ—Å–æ–≤—É—é—Ç—å—Å—è</b></p>',
              mobileHtml: '<p><b>–°—å–æ–≥–æ–¥–Ω—ñ –≥—Ä–∞—Ñ—ñ–∫–∏ –≤—ñ–¥–∫–ª—é—á–µ–Ω—å –Ω–µ –∑–∞—Å—Ç–æ—Å–æ–≤—É—é—Ç—å—Å—è</b></p>',
              archiveLength,
            };
            console.log('üíæ –í—Å—Ç–∞–Ω–æ–≤–ª—é—é menuData –ë–ï–ó –≥—Ä–∞—Ñ—ñ–∫–∞:', emptyMenuData);
            setMenuData(emptyMenuData);
            previousArchiveLengthRef.current = archiveLength;
          }
        }
      }

      setLoading(false);
    } catch (err) {
      setError(err instanceof Error ? err.message : 'Unknown error');
      setLoading(false);
    }
  };

  useEffect(() => {
    // –ü–µ—Ä—à–∏–π –∑–∞–ø–∏—Ç –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ
    fetchLatestImage();

    // –ó–∞–ø–∏—Ç –∫–æ–∂–Ω—ñ 10 —Ö–≤–∏–ª–∏–Ω (600000 –º—Å)
    const interval = setInterval(() => {
      fetchLatestImage();
    }, 600000);

    // –û—á–∏—â–µ–Ω–Ω—è —ñ–Ω—Ç–µ—Ä–≤–∞–ª—É –ø—Ä–∏ —Ä–æ–∑–º–æ–Ω—Ç—É–≤–∞–Ω–Ω—ñ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
    return () => clearInterval(interval);
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, []);

  const currentImageUrl = isMobile ? menuData?.mobileImageUrl : menuData?.desktopImageUrl;
  const currentHtml = isMobile ? menuData?.mobileHtml : menuData?.desktopHtml;

  console.log('üé® Render state:', {
    loading,
    error,
    hasMenuData: !!menuData,
    menuData,
    isMobile,
    currentImageUrl,
    currentHtmlLength: currentHtml?.length
  });

  const requestNotificationPermission = async () => {
    console.log('üîî –ó–∞–ø–∏—Ç –¥–æ–∑–≤–æ–ª—É –Ω–∞ notifications...');
    if ('Notification' in window) {
      const permission = await Notification.requestPermission();
      console.log('üîî –û—Ç—Ä–∏–º–∞–Ω–æ –¥–æ–∑–≤—ñ–ª:', permission);
      setNotificationPermission(permission);

      // –¢–µ—Å—Ç–æ–≤–µ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –ø—ñ—Å–ª—è –Ω–∞–¥–∞–Ω–Ω—è –¥–æ–∑–≤–æ–ª—É
      if (permission === 'granted') {
        console.log('‚úÖ –î–æ–∑–≤—ñ–ª –Ω–∞–¥–∞–Ω–æ! –ü–æ–∫–∞–∑—É—é —Ç–µ—Å—Ç–æ–≤–µ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è');
        setTimeout(() => {
          playNotificationSound();
          showNotification('–î–æ–∑–≤—ñ–ª –Ω–∞–¥–∞–Ω–æ!', '–¢–µ–ø–µ—Ä –≤–∏ –±—É–¥–µ—Ç–µ –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –ø—Ä–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –≥—Ä–∞—Ñ—ñ–∫—É');
        }, 500);
      }
    }
  };

  return (
    <div className="flex min-h-screen items-center justify-center bg-zinc-50 font-sans dark:bg-black">
      <main className="flex min-h-screen w-full max-w-4xl flex-col items-center justify-center gap-8 py-8 px-4 bg-white dark:bg-black">
        <h1 className="text-3xl font-semibold text-black dark:text-zinc-50 text-center">
          –ì—Ä–∞—Ñ—ñ–∫ –≤—ñ–¥–∫–ª—é—á–µ–Ω—å –µ–ª–µ–∫—Ç—Ä–æ–µ–Ω–µ—Ä–≥—ñ—ó
        </h1>

        {notificationPermission === 'default' && (
          <div className="w-full bg-blue-100 dark:bg-blue-900 p-4 rounded-lg">
            <p className="text-sm text-blue-800 dark:text-blue-200 text-center mb-2">
              –î–æ–∑–≤–æ–ª—å—Ç–µ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è, —â–æ–± –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –≥—Ä–∞—Ñ—ñ–∫—É
            </p>
            <button
              onClick={requestNotificationPermission}
              className="w-full bg-blue-600 hover:bg-blue-700 text-white font-medium py-2 px-4 rounded"
            >
              –î–æ–∑–≤–æ–ª–∏—Ç–∏ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è
            </button>
          </div>
        )}

        {loading && (
          <p className="text-lg text-zinc-600 dark:text-zinc-400">
            –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...
          </p>
        )}

        {error && (
          <p className="text-lg text-red-600 dark:text-red-400">
            –ü–æ–º–∏–ª–∫–∞: {error}
          </p>
        )}

        {!loading && !error && menuData && (
          <div className="w-full flex flex-col items-center gap-6">
            {currentImageUrl ? (
              <img
                src={`https://api.loe.lviv.ua${currentImageUrl}`}
                alt="–ì—Ä–∞—Ñ—ñ–∫ –≤—ñ–¥–∫–ª—é—á–µ–Ω—å"
                className="w-full h-auto rounded-lg shadow-lg"
              />
            ) : (
              <div className="w-full bg-green-100 dark:bg-green-900 p-8 rounded-lg">
                <p className="text-2xl text-center text-green-800 dark:text-green-200 font-semibold">
                  ‚úÖ –°—å–æ–≥–æ–¥–Ω—ñ –≥—Ä–∞—Ñ—ñ–∫–∏ –≤—ñ–¥–∫–ª—é—á–µ–Ω—å –Ω–µ –∑–∞—Å—Ç–æ—Å–æ–≤—É—é—Ç—å—Å—è
                </p>
              </div>
            )}

            {currentHtml && !currentHtml.includes('–Ω–µ –∑–∞—Å—Ç–æ—Å–æ–≤—É—é—Ç—å—Å—è') && (
              <div
                className="w-full text-zinc-800 dark:text-zinc-200 text-sm md:text-base text-center"
                dangerouslySetInnerHTML={{ __html: currentHtml }}
              />
            )}

            <p className="text-sm text-zinc-500 dark:text-zinc-400">
              –û–Ω–æ–≤–ª—é—î—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –∫–æ–∂–Ω—ñ 10 —Ö–≤–∏–ª–∏–Ω
            </p>

            {menuData.archiveLength > 0 && (
              <p className="text-xs text-zinc-400 dark:text-zinc-500">
                –ì—Ä–∞—Ñ—ñ–∫—ñ–≤ –≤ –∞—Ä—Ö—ñ–≤—ñ: {menuData.archiveLength}
              </p>
            )}

            {notificationPermission === 'granted' && (
              <button
                onClick={() => {
                  playNotificationSound();
                  showNotification('–¢–µ—Å—Ç!', '–¶–µ —Ç–µ—Å—Ç–æ–≤–µ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è');
                }}
                className="mt-4 bg-green-600 hover:bg-green-700 text-white font-medium py-2 px-4 rounded"
              >
                –¢–µ—Å—Ç—É–≤–∞—Ç–∏ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è
              </button>
            )}
          </div>
        )}

        {!loading && !error && !menuData && (
          <p className="text-lg text-zinc-600 dark:text-zinc-400">
            –î–∞–Ω—ñ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ
          </p>
        )}
      </main>
    </div>
  );
}
